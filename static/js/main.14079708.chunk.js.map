{"version":3,"sources":["common/Flex.jsx","components/CurrentWeather/CurrentWeatherLoader.jsx","components/CurrentWeather/Styles.js","components/CurrentWeather/CurrentWeather.jsx","services/api.js","redux/actions/dailyWeather.js","components/DailyForecast/DayForecast/Styles.js","components/DailyForecast/DayForecast/DayForecast.jsx","components/DailyForecast/DayForecast/DayForecastLoader.jsx","components/DailyForecast/Styles.js","components/DailyForecast/DailyForecast.jsx","common/convertTime.js","components/Details/DetailsLoader.jsx","components/Details/Styles.js","components/Details/Details.jsx","components/HourlyForecast/Styles.js","components/HourlyForecast/Chart/Chart.jsx","components/HourlyForecast/HourForecast/Styles.js","assets/icons/humidity.svg","assets/icons/wind.svg","components/HourlyForecast/HourForecast/HourForecast.jsx","common/Loader/Loader.jsx","components/HourlyForecast/HourlyForecast.jsx","redux/actions/position.js","redux/actions/search.js","redux/actions/currentWeather.js","redux/actions/hourlyWeather.js","components/Search/Styles.js","assets/icons/search.svg","components/Search/Search.jsx","assets/images/background.jpg","appStyle.js","App.js","globalStyle.js","redux/reducers/currentWeather.js","redux/reducers/position.js","redux/reducers/dailyWeather.js","redux/reducers/hourlyWeather.js","redux/reducers/search.js","redux/store.js","index.js"],"names":["StyledFlex","styled","div","props","direction","align","justify","Flex","CurrentWeatherLoader","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","StyledCurrentWeather","StyledLocation","p","StyledTemperature","StyledWeatherIcon","img","StyledDescription","CurrentWeatherDetails","CurrentWeather","useSelector","state","currentWeather","country","city","description","feelsLike","icon","temperature","visibility","wind","isLoad","src","alt","Math","round","axiosInstance","axios","create","baseURL","API","getCurrentWeather","lat","lon","get","then","response","data","catch","getDailyWeather","getHourlyWeather","setLoad","type","payload","dispatch","setDailyWeather","StyledDayForecast","StyledDate","StyledImage","DayForecast","className","active","onClick","onDayClick","date","maxTemp","minTemp","DayForecastLoader","style","flex","StyledDailyForecast","StyledTitle","h2","StyledWrapper","DailyForecast","memo","useDispatch","days","dailyWeather","activeDay","latBySearch","coords","lonBySearch","useEffect","slice","map","day","setActiveDay","Date","dt","toDateString","split","weather","ceil","temp","max","floor","min","Array","fill","convertTime","ts","toTimeString","substring","DetailsLoader","StyledDetails","StyledSun","StyledMoon","StyledSunrise","StyledSunset","StyledMoonrise","StyledMoonset","Details","filter","sunset","sunrise","moonset","moonrise","StyledHourlyForecast","StyledButton","button","StyledForecastLine","StyledSubtitle","GraphWrapper","Chart","defaults","color","font","family","weight","labels","hour","time","scaleFontColor","datasets","label","borderColor","options","defaultFontColor","maintainAspectRatio","StyledHourForecast","StyledPrecipitation","humidity","StyledWind","StyledTime","HourForecast","precipitation","Loader","HourlyForecast","hourlyWeather","currentDayHourlyForecast","hours","useState","activeButton","setActiveButton","length","main","setPosition","location","setResponse","isResponseSuccessful","setCurrentWeather","coord","setHourlyWeather","StyledSearch","input","StyledSearchWrapper","StyledErrorMessage","Search","searchRef","useRef","searchValue","setSearchValue","search","onSubmit","event","preventDefault","searchCity","trim","onSubmitHandler","ref","onChange","current","value","Wrapper","background","Container","App","position","shallowEqual","navigator","geolocation","getCurrentPosition","latitude","longitude","getWeatherBySearch","GlobalStyle","createGlobalStyle","normalize","initialState","sys","name","feels_like","Position","DailyWeather","daily","HourlyWeather","list","reducers","combineReducers","store","createStore","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14079708.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFlex = styled.div`\r\n  display: flex;\r\n  flex-direction: ${(props) => props.direction || 'row'};\r\n  align-items: ${(props) => props.align || 'stretch'};\r\n  justify-content: ${(props) => props.justify || 'stretch'};\r\n  margin: 0px;\r\n`\r\n\r\nfunction Flex(props) {\r\n  return <StyledFlex {...props} />\r\n}\r\n\r\nexport default Flex\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst CurrentWeatherLoader = (props) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    width={270}\r\n    height={160}\r\n    viewBox='0 0 270 160'\r\n    backgroundColor='rgba(255, 255, 255, 0.2)'\r\n    foregroundColor='rgba(255, 255, 255, 0.4)'\r\n    {...props}>\r\n    <rect x='35' y='2' rx='10' ry='10' width='110' height='20' />\r\n    <rect x='155' y='2' rx='10' ry='10' width='60' height='20' />\r\n    <rect x='10' y='40' rx='10' ry='10' width='250' height='70' />\r\n    <rect x='85' y='120' rx='10' ry='10' width='100' height='18' />\r\n    <rect x='10' y='145' rx='10' ry='10' width='250' height='15' />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default CurrentWeatherLoader\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledCurrentWeather = styled.div`\r\n  text-align: center;\r\n  max-width: 270px;\r\n  margin: 0px auto;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n`\r\nexport const StyledLocation = styled.p`\r\n  font-size: 20px;\r\n`\r\n\r\nexport const StyledTemperature = styled.p`\r\n  font-size: 72px;\r\n  font-weight: 200;\r\n`\r\n\r\nexport const StyledWeatherIcon = styled.img`\r\n  object-fit: cover;\r\n  object-position: center;\r\n  width: 120px;\r\n  margin: -10px;\r\n`\r\n\r\nexport const StyledDescription = styled.p`\r\n  font-size: 20px;\r\n  margin-bottom: 15px;\r\n`\r\n\r\nexport const CurrentWeatherDetails = styled.div`\r\n  font-size: 12px;\r\n  & span {\r\n    margin-right: 7px;\r\n  }\r\n  & span:last-child {\r\n    margin-right: 0px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Flex from '../../common/Flex'\r\nimport CurrentWeatherLoader from './CurrentWeatherLoader'\r\nimport {\r\n  CurrentWeatherDetails,\r\n  StyledCurrentWeather,\r\n  StyledDescription,\r\n  StyledLocation,\r\n  StyledTemperature,\r\n  StyledWeatherIcon,\r\n} from './Styles'\r\n\r\nconst CurrentWeather = () => {\r\n  const {\r\n    country,\r\n    city,\r\n    description,\r\n    feelsLike,\r\n    icon,\r\n    temperature,\r\n    visibility,\r\n    wind,\r\n  } = useSelector((state) => state.currentWeather)\r\n\r\n  const isLoad = useSelector((state) => state.currentWeather.isLoad)\r\n  return (\r\n    <StyledCurrentWeather>\r\n      {isLoad ? (\r\n        <>\r\n          <StyledLocation>\r\n            {city}, {country}\r\n          </StyledLocation>\r\n          <Flex align='center' justify='space-around'>\r\n            <StyledWeatherIcon\r\n              src={`http://openweathermap.org/img/wn/${icon}@4x.png`}\r\n              alt='weather icon'\r\n            />\r\n            <StyledTemperature>{Math.round(temperature)}°</StyledTemperature>\r\n          </Flex>\r\n          <StyledDescription>{description}</StyledDescription>\r\n          <CurrentWeatherDetails>\r\n            <span>Feels like {Math.round(feelsLike)}°</span>\r\n            <span>Wind {Math.round(wind)} km\\h</span>\r\n            <span>Visibility {visibility / 1000} km</span>\r\n          </CurrentWeatherDetails>\r\n        </>\r\n      ) : (\r\n        <CurrentWeatherLoader />\r\n      )}\r\n    </StyledCurrentWeather>\r\n  )\r\n}\r\n\r\nexport default CurrentWeather\r\n","import axios from 'axios'\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5/',\r\n})\r\n\r\nconst API = {\r\n  getCurrentWeather: (lat, lon, city = null) => {\r\n    return axiosInstance\r\n      .get(\r\n        `weather?${\r\n          lat !== null && lon !== null ? 'lat=' + lat + `&lon=` + lon : ''\r\n        }${\r\n          city !== null ? `&q=` + city : ''\r\n        }&units=metric&appid=34f0fb637a40be39e56e907408b59746`\r\n      )\r\n      .then((response) => response.data)\r\n      .catch(() => 404)\r\n  },\r\n  getDailyWeather: (lat, lon) => {\r\n    return axiosInstance\r\n      .get(\r\n        `onecall?lat=${lat}&lon=${lon}&exclude=minutely,alerts,current&units=metric&appid=34f0fb637a40be39e56e907408b59746`\r\n      )\r\n      .then((response) => response.data)\r\n  },\r\n  getHourlyWeather: (lat, lon, city = null) => {\r\n    return axiosInstance\r\n      .get(\r\n        `forecast?${\r\n          lat !== null && lon !== null ? 'lat=' + lat + `&lon=` + lon : ''\r\n        }${\r\n          city !== null && city ? `q=` + city : ''\r\n        }&units=metric&appid=34f0fb637a40be39e56e907408b59746`\r\n      )\r\n      .then((response) => response.data)\r\n  },\r\n}\r\nexport default API\r\n","import API from '../../services/api'\r\n\r\nconst setDailyWeather = (data) => {\r\n  return {\r\n    type: 'SET_DAILY_WEATHER',\r\n    payload: {\r\n      ...data,\r\n    },\r\n  }\r\n}\r\n\r\nconst setLoad = (isLoad) => {\r\n  return {\r\n    type: 'SET_LOAD',\r\n    payload: {\r\n      isLoad,\r\n    },\r\n  }\r\n}\r\n\r\nexport const setActiveDay = (day) => {\r\n  return {\r\n    type: 'SET_ACTIVE_DAY',\r\n    payload: {\r\n      date: day,\r\n    },\r\n  }\r\n}\r\nexport const setCoordsBySearch = (coords) => {\r\n  return {\r\n    type: 'SET_COORDS_BY_SEARCH',\r\n    payload: {\r\n      lat: coords.lat,\r\n      lon: coords.lon,\r\n    },\r\n  }\r\n}\r\nexport const getDailyWeather = (lat, lon, city) => {\r\n  return (dispatch) => {\r\n    dispatch(setLoad(false))\r\n    API.getDailyWeather(lat, lon, city).then((data) => {\r\n      dispatch(setDailyWeather(data))\r\n    })\r\n    dispatch(setLoad(true))\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledDayForecast = styled.div`\r\n  padding: 5px 15px 10px 5px;\r\n  min-width: 95px;\r\n  max-width: 125px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    outline: 2px solid rgba(255, 255, 255, 0.8);\r\n  }\r\n  &.active {\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n    position: relative;\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: -23px;\r\n      left: calc(50% - 13px);\r\n      border: 13px solid transparent;\r\n      border-top: 10px solid rgba(255, 255, 255, 0.3);\r\n    }\r\n  }\r\n  margin: 0px 5px;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n`\r\nexport const StyledDate = styled.p`\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nexport const StyledImage = styled.img`\r\n  object-fit: cover;\r\n  object-position: center;\r\n  width: 70px;\r\n  height: 70px;\r\n  margin: -10px 0px -10px -15px;\r\n`\r\n\r\nexport const StyledTemperature = styled.p`\r\n  font-size: 24px;\r\n  margin-top: 10px;\r\n  & span {\r\n    font-size: 14px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n  }\r\n  margin-bottom: 10px;\r\n`\r\nexport const StyledDescription = styled.p`\r\n  min-width: 120px;\r\n`\r\n","import React from 'react'\r\nimport {\r\n  StyledDate,\r\n  StyledDayForecast,\r\n  StyledDescription,\r\n  StyledImage,\r\n  StyledTemperature,\r\n} from './Styles'\r\n\r\nfunction DayForecast(props) {\r\n  return (\r\n    <StyledDayForecast\r\n      className={props.active ? 'active' : ''}\r\n      onClick={() => props.onDayClick()}>\r\n      <StyledDate>\r\n        {props.date[0]} {props.date[2]}\r\n      </StyledDate>\r\n      <StyledImage src={props.icon}></StyledImage>\r\n      <StyledTemperature>\r\n        {props.maxTemp}° <span> {props.minTemp}°</span>\r\n      </StyledTemperature>\r\n      <StyledDescription>{props.description}</StyledDescription>\r\n    </StyledDayForecast>\r\n  )\r\n}\r\n\r\nexport default DayForecast\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst DayForecastLoader = (props) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    width={145}\r\n    height={175}\r\n    viewBox='0 0 145 175'\r\n    backgroundColor='rgba(255, 255, 255, 0.2)'\r\n    foregroundColor='rgba(255, 255, 255, 0.4)'\r\n    style={{ flex: '0 0 135px' }}\r\n    {...props}>\r\n    <rect x='0' y='0' rx='10' ry='10' width='100' height='20' />\r\n    <rect x='0' y='30' rx='10' ry='10' width='120' height='110' />\r\n    <rect x='0' y='150' rx='10' ry='10' width='120' height='20' />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default DayForecastLoader\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledDailyForecast = styled.div`\r\n  max-width: 1000px;\r\n  overflow-y: hidden;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  margin: 0px auto;\r\n`\r\nexport const StyledTitle = styled.h2`\r\n  font-size: 18px;\r\n`\r\n\r\nexport const StyledWrapper = styled.div`\r\n  overflow-y: hidden;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  padding: 2px 2px 10px 2px;\r\n`\r\n","import React, { memo, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Flex from '../../common/Flex'\r\nimport { getDailyWeather, setActiveDay } from '../../redux/actions/dailyWeather'\r\nimport DayForecast from './DayForecast/DayForecast'\r\nimport DayForecastLoader from './DayForecast/DayForecastLoader'\r\nimport { StyledDailyForecast, StyledTitle, StyledWrapper } from './Styles'\r\n\r\nconst DailyForecast = memo(() => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onDayClick = (day) =>\r\n    dispatch(setActiveDay(new Date(day.dt * 1000).toDateString()))\r\n\r\n  const days = useSelector((state) => state.dailyWeather.days)\r\n  const activeDay = useSelector((state) => state.dailyWeather.activeDay.date)\r\n\r\n  const isLoad = useSelector((state) => state.dailyWeather.isLoad)\r\n\r\n  const latBySearch = useSelector((state) => state.dailyWeather.coords.lat)\r\n  const lonBySearch = useSelector((state) => state.dailyWeather.coords.lon)\r\n\r\n  useEffect(() => {\r\n    if (\r\n      latBySearch &&\r\n      latBySearch !== null &&\r\n      lonBySearch &&\r\n      lonBySearch !== null\r\n    ) {\r\n      dispatch(getDailyWeather(latBySearch, lonBySearch))\r\n    }\r\n  }, [dispatch, latBySearch, lonBySearch])\r\n  return (\r\n    <StyledDailyForecast>\r\n      <StyledTitle>Daily</StyledTitle>\r\n      <StyledWrapper>\r\n        <Flex justify='space-between'>\r\n          {isLoad\r\n            ? days\r\n                .slice(0, 5)\r\n                .map((day) => (\r\n                  <DayForecast\r\n                    onDayClick={() => onDayClick(day)}\r\n                    active={\r\n                      activeDay === new Date(day.dt * 1000).toDateString()\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    date={new Date(day.dt * 1000).toDateString().split(' ')}\r\n                    icon={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n                    maxTemp={Math.ceil(day.temp.max)}\r\n                    minTemp={Math.floor(day.temp.min)}\r\n                    description={day.weather[0].description}\r\n                    key={day.dt}\r\n                  />\r\n                ))\r\n            : Array(5).fill(<DayForecastLoader />)}\r\n        </Flex>\r\n      </StyledWrapper>\r\n    </StyledDailyForecast>\r\n  )\r\n})\r\n\r\nexport default DailyForecast\r\n","const convertTime = (ts) => new Date(ts * 1000).toTimeString().substring(0, 5)\r\n\r\nexport default convertTime\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst DetailsLoader = (props) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    width={140}\r\n    height={180}\r\n    viewBox='0 0 140 180'\r\n    backgroundColor='rgba(255, 255, 255, 0.2)'\r\n    foregroundColor='rgba(255, 255, 255, 0.4)'\r\n    {...props}>\r\n    <rect x='0' y='0' rx='10' ry='10' width='130' height='85' />\r\n    <rect x='0' y='93' rx='10' ry='10' width='130' height='85' />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default DetailsLoader\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledDetails = styled.div`\r\n  margin-bottom: 15px;\r\n`\r\n\r\nexport const StyledDescription = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin-bottom: 3px;\r\n`\r\n\r\nexport const StyledSun = styled.div`\r\n  display: flex;\r\n  padding-top: 5px;\r\n  flex-wrap: wrap;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n  margin-right: 25px;\r\n  font-size: 24px;\r\n  line-height: 30px;\r\n  min-width: 130px;\r\n  @media (max-width: 768px) {\r\n    font-size: 17px;\r\n    display: block;\r\n    margin-right: 10px;\r\n  }\r\n`\r\n\r\nexport const StyledMoon = styled.div`\r\n  display: flex;\r\n  padding-top: 5px;\r\n  flex-wrap: wrap;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n  font-size: 24px;\r\n  line-height: 30px;\r\n  min-width: 130px;\r\n  @media (max-width: 768px) {\r\n    font-size: 17px;\r\n    display: block;\r\n  }\r\n`\r\n\r\nexport const StyledSunrise = styled.div`\r\n  padding-left: 43px;\r\n  background: url('https://image.flaticon.com/icons/png/512/728/728123.png')\r\n    left/cover no-repeat;\r\n  background-size: 32px;\r\n  margin: 5px 20px 15px 0px;\r\n`\r\nexport const StyledSunset = styled.div`\r\n  padding-left: 43px;\r\n  background: url('https://image.flaticon.com/icons/png/512/728/728124.png')\r\n    left/cover no-repeat;\r\n  background-size: 32px;\r\n  margin: 5px 0px 15px 0px;\r\n`\r\nexport const StyledMoonrise = styled.div`\r\n  padding-left: 43px;\r\n  background: url('https://image.flaticon.com/icons/png/512/728/728098.png')\r\n    left/cover no-repeat;\r\n  background-size: 32px;\r\n  margin: 5px 20px 15px 0px;\r\n`\r\nexport const StyledMoonset = styled.div`\r\n  padding-left: 43px;\r\n  background: url('https://image.flaticon.com/icons/png/512/728/728099.png')\r\n    left/cover no-repeat;\r\n  background-size: 32px;\r\n  margin: 5px 0px 15px 0px;\r\n`\r\n\r\nexport const StyledTitle = styled.h2`\r\n  font-size: 18px;\r\n  margin-bottom: 25px;\r\n`\r\n","import { memo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport convertTime from '../../common/convertTime'\r\nimport Flex from '../../common/Flex'\r\nimport DetailsLoader from './DetailsLoader'\r\nimport {\r\n  StyledDetails,\r\n  StyledMoon,\r\n  StyledMoonrise,\r\n  StyledSun,\r\n  StyledSunrise,\r\n  StyledTitle,\r\n  StyledSunset,\r\n  StyledMoonset,\r\n  StyledDescription,\r\n} from './Styles'\r\n\r\nconst Details = memo((props) => {\r\n  const activeDay = useSelector((state) => state.dailyWeather.activeDay.date)\r\n\r\n  const days = useSelector((state) => state.dailyWeather.days)\r\n  const day = days.filter(\r\n    (day) => new Date(day.dt * 1000).toDateString() === activeDay\r\n  )\r\n  const isLoad = useSelector((state) => state.currentWeather.isLoad)\r\n\r\n  const sunset = convertTime(day[0]?.sunset)\r\n  const sunrise = convertTime(day[0]?.sunrise)\r\n  const moonset = convertTime(day[0]?.moonset)\r\n  const moonrise = convertTime(day[0]?.moonrise)\r\n\r\n  return (\r\n    <StyledDetails>\r\n      <StyledTitle>Day Details</StyledTitle>\r\n      <Flex>\r\n        {isLoad ? (\r\n          <StyledSun>\r\n            <div>\r\n              <StyledDescription>Sunrise</StyledDescription>\r\n              <StyledSunrise>{sunrise} AM</StyledSunrise>\r\n            </div>\r\n            <div>\r\n              <StyledDescription>Sunset</StyledDescription>\r\n              <StyledSunset>{sunset} PM</StyledSunset>\r\n            </div>\r\n          </StyledSun>\r\n        ) : (\r\n          <DetailsLoader />\r\n        )}\r\n        {isLoad ? (\r\n          <StyledMoon>\r\n            <div>\r\n              <StyledDescription>Moonrise</StyledDescription>\r\n              <StyledMoonrise>{moonrise} PM</StyledMoonrise>\r\n            </div>\r\n            <div>\r\n              <StyledDescription>Moonset</StyledDescription>\r\n              <StyledMoonset>{moonset} AM</StyledMoonset>\r\n            </div>\r\n          </StyledMoon>\r\n        ) : (\r\n          <DetailsLoader />\r\n        )}\r\n      </Flex>\r\n    </StyledDetails>\r\n  )\r\n})\r\n\r\nexport default Details\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledHourlyForecast = styled.div`\r\n  margin-bottom: 25px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const StyledTitle = styled.h2`\r\n  font-size: 18px;\r\n  margin-bottom: 25px;\r\n`\r\n\r\nexport const StyledButton = styled.button`\r\n  border: none;\r\n  background-color: ${(props) =>\r\n    props.active ? 'ccc' : 'rgba(255, 255, 255, 0.5)'};\r\n  padding: 5px;\r\n  height: 30px;\r\n  width: 100%;\r\n  font-size: 13px;\r\n  &:hover {\r\n    outline: 1px solid #fff;\r\n  }\r\n  cursor: pointer;\r\n  margin-right: 15px;\r\n  font-weight: 500;\r\n  color: #262626;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n`\r\nexport const StyledWrapper = styled.div`\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.5);\r\n  border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n  overflow-y: hidden;\r\n  -ms-overflow-style: none;\r\n  scrollbar-width: none;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport const StyledForecastLine = styled.div`\r\n  display: flex;\r\n  justify-content: ${(props) => (props.isLoad ? props.justify : 'center')};\r\n`\r\n\r\nexport const StyledSubtitle = styled.p`\r\n  font-size: 18px;\r\n  margin: 20px 0px;\r\n`\r\n\r\nexport const GraphWrapper = styled.div`\r\n  min-height: 212px;\r\n`\r\n","import { defaults } from 'react-chartjs-2'\r\nimport { memo } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { GraphWrapper } from '../Styles'\r\n\r\nconst Chart = memo((props) => {\r\n  defaults.color = '#fff'\r\n  defaults.font.family = \"'Montserrat', 'sans-serif'\"\r\n  defaults.font.weight = 500\r\n\r\n  const data = {\r\n    labels: props.data.map((hour) =>\r\n      hour.time === '00'\r\n        ? '12 am'\r\n        : hour.time < 12\r\n        ? hour.time + ' am'\r\n        : hour.time + ' pm'\r\n    ),\r\n    scaleFontColor: '#ffffff',\r\n    datasets: [\r\n      {\r\n        label: 'temperature',\r\n        data: props.data.map((hour) => hour.temperature),\r\n        fill: false,\r\n        backgroundColor: '#EC6E4C',\r\n        borderColor: 'rgba(255, 255, 255, 0.5)',\r\n      },\r\n    ],\r\n  }\r\n\r\n  const options = {\r\n    defaultFontColor: '#FFFFFF',\r\n    maintainAspectRatio: false,\r\n  }\r\n\r\n  return (\r\n    <GraphWrapper>\r\n      <Line data={data} options={options} width={1200} height={212} />\r\n    </GraphWrapper>\r\n  )\r\n})\r\n\r\nexport default Chart\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledHourForecast = styled.div`\r\n  padding: 10px 10px 10px 5px;\r\n  min-width: 80px;\r\n  flex: 0 1 135px;\r\n  // top: 200px;\r\n  opacity: 0.2;\r\n  position: relative;\r\n  -webkit-animation: 1s slidein forwards;\r\n  animation: 1s slidein forwards;\r\n\r\n  @-webkit-keyframes slidein {\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @keyframes slidein {\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n\r\nexport const StyledImage = styled.img`\r\n  object-fit: cover;\r\n  object-position: center;\r\n  width: 70px;\r\n  height: 70px;\r\n  margin: -15px 0px -12px -14px;\r\n`\r\n\r\nexport const StyledTemperature = styled.p`\r\n  font-size: 20px;\r\n  margin-bottom: 7px;\r\n`\r\n\r\nexport const StyledDescription = styled.p`\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n  min-height: 33px;\r\n  height: 45px;\r\n  max-width: 60px;\r\n`\r\n\r\nexport const StyledPrecipitation = styled.p`\r\n  color: rgba(255, 255, 255, 0.7);\r\n  margin-bottom: 5px;\r\n  background: url(${(props) => props.humidity}) left/cover no-repeat;\r\n  background-size: 15px;\r\n  padding-left: 20px;\r\n`\r\n\r\nexport const StyledWind = styled.p`\r\n  color: rgba(255, 255, 255, 0.7);\r\n  margin-bottom: 8px;\r\n  background: url(${(props) => props.wind}) left/cover no-repeat;\r\n  background-size: 15px;\r\n  padding-left: 20px;\r\n`\r\n\r\nexport const StyledTime = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`\r\n","export default __webpack_public_path__ + \"static/media/humidity.a0b117ee.svg\";","export default __webpack_public_path__ + \"static/media/wind.117d25e4.svg\";","import React from 'react'\r\nimport {\r\n  StyledHourForecast,\r\n  StyledPrecipitation,\r\n  StyledTime,\r\n  StyledWind,\r\n  StyledDescription,\r\n  StyledTemperature,\r\n  StyledImage,\r\n} from './Styles'\r\nimport humidity from '../../../assets/icons/humidity.svg'\r\nimport wind from '../../../assets/icons/wind.svg'\r\n\r\nconst HourForecast = (props) => {\r\n  return (\r\n    <StyledHourForecast>\r\n      <StyledImage src={props.icon}></StyledImage>\r\n      <StyledTemperature>{props.temperature}°</StyledTemperature>\r\n      <StyledDescription>{props.description}</StyledDescription>\r\n      <StyledPrecipitation humidity={humidity}>\r\n        {props.precipitation}%\r\n      </StyledPrecipitation>\r\n      <StyledWind wind={wind}>{props.wind} km/h</StyledWind>\r\n      <StyledTime>\r\n        {props.time === '00' ? '12' : props.time}\r\n        {props.time < 12 ? ' am' : ' pm'}\r\n      </StyledTime>\r\n    </StyledHourForecast>\r\n  )\r\n}\r\n\r\nexport default HourForecast\r\n","import './styles.css'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='lds-roller'>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import Chart from './Chart/Chart'\r\nimport React, { memo, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport convertTime from '../../common/convertTime'\r\nimport Flex from '../../common/Flex'\r\nimport HourForecast from './HourForecast/HourForecast'\r\nimport {\r\n  StyledButton,\r\n  StyledHourlyForecast,\r\n  StyledSubtitle,\r\n  StyledTitle,\r\n  StyledWrapper,\r\n  StyledForecastLine,\r\n} from './Styles'\r\nimport Loader from '../../common/Loader/Loader'\r\n\r\nconst HourlyForecast = memo(() => {\r\n  const activeDay = useSelector((state) => state.dailyWeather.activeDay.date)\r\n\r\n  const isLoad = useSelector((state) => state.hourlyWeather.isLoad)\r\n\r\n  const hourlyForecast = useSelector((state) => state.hourlyWeather.hours)\r\n\r\n  const currentDayHourlyForecast = hourlyForecast.filter(\r\n    (hour) => new Date(hour.dt * 1000).toDateString() === activeDay\r\n  )\r\n\r\n  const [activeButton, setActiveButton] = useState('Details')\r\n\r\n  const onSummaryClick = () => setActiveButton('Summary')\r\n\r\n  const onDetailsClick = () => setActiveButton('Details')\r\n\r\n  return (\r\n    <StyledHourlyForecast>\r\n      <Flex justify='space-between' align='center'>\r\n        <StyledTitle>Every 3 hours</StyledTitle>\r\n        <Flex>\r\n          <StyledButton\r\n            active={activeButton === 'Summary' ? true : false}\r\n            onClick={onSummaryClick}>\r\n            Summary\r\n          </StyledButton>\r\n          <StyledButton\r\n            active={activeButton === 'Details' ? true : false}\r\n            onClick={onDetailsClick}>\r\n            Details\r\n          </StyledButton>\r\n        </Flex>\r\n      </Flex>\r\n      <StyledWrapper>\r\n        {isLoad ? (\r\n          currentDayHourlyForecast.length > 0 ? (\r\n            activeButton === 'Details' ? (\r\n              <StyledForecastLine\r\n                isLoad={isLoad}\r\n                justify={\r\n                  currentDayHourlyForecast.length < 6\r\n                    ? 'start'\r\n                    : 'space-between'\r\n                }>\r\n                {currentDayHourlyForecast.map((hour) => (\r\n                  <HourForecast\r\n                    icon={`http://openweathermap.org/img/wn/${hour.weather[0].icon}@2x.png`}\r\n                    temperature={Math.round(hour.main.temp)}\r\n                    description={hour.weather[0].description}\r\n                    precipitation={hour.main.humidity}\r\n                    wind={Math.round(hour.wind.speed)}\r\n                    time={convertTime(hour.dt).substring(0, 2)}\r\n                    key={hour.dt}\r\n                  />\r\n                ))}\r\n              </StyledForecastLine>\r\n            ) : (\r\n              <Chart\r\n                data={currentDayHourlyForecast.map((hour) => ({\r\n                  time: convertTime(hour.dt).substring(0, 2),\r\n                  temperature: hour.main.temp,\r\n                }))}\r\n              />\r\n            )\r\n          ) : (\r\n            <StyledSubtitle>\r\n              Sorry, no weather for the next 3 hours\r\n            </StyledSubtitle>\r\n          )\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </StyledWrapper>\r\n    </StyledHourlyForecast>\r\n  )\r\n})\r\n\r\nexport default HourlyForecast\r\n","export const setPosition = (location) => {\r\n  return {\r\n    type: 'SET_POSITION',\r\n    payload: { ...location },\r\n  }\r\n}\r\n\r\nexport const getPosition = () => {\r\n  return (dispatch) => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) =>\r\n        dispatch(\r\n          setPosition({\r\n            lat: position.coords.latitude,\r\n            lon: position.coords.longitude,\r\n          })\r\n        ),\r\n      () => {\r\n        dispatch(\r\n          setPosition({\r\n            lat: 55.751244,\r\n            lon: 37.618423,\r\n          })\r\n        )\r\n      }\r\n    )\r\n  }\r\n}\r\n","export const setSearchCity = (searchCity) => {\r\n  return {\r\n    type: 'SET_SEARCH_CITY',\r\n    payload: {\r\n      searchCity,\r\n    },\r\n  }\r\n}\r\n\r\nexport const setResponse = (isResponseSuccessful) => {\r\n  return {\r\n    type: 'SET_RESPONSE',\r\n    payload: {\r\n      isResponseSuccessful,\r\n    },\r\n  }\r\n}\r\n","import API from '../../services/api'\r\nimport { setCoordsBySearch } from './dailyWeather'\r\nimport { setResponse } from './search'\r\n\r\nconst setCurrentWeather = (data) => {\r\n  return {\r\n    type: 'SET_CURRENT_WEATHER',\r\n    payload: {\r\n      ...data,\r\n    },\r\n  }\r\n}\r\n\r\nconst setLoad = (isLoad) => {\r\n  return {\r\n    type: 'SET_LOAD',\r\n    payload: {\r\n      isLoad,\r\n    },\r\n  }\r\n}\r\n\r\nexport const getCurrentWeather = (lat, lon, city) => {\r\n  return (dispatch) => {\r\n    dispatch(setLoad(false))\r\n    API.getCurrentWeather(lat, lon, city).then((data) => {\r\n      if (data !== 404) {\r\n        dispatch(setCurrentWeather(data))\r\n        dispatch(setCoordsBySearch(data.coord))\r\n        dispatch(setResponse(true))\r\n      } else {\r\n        dispatch(setResponse(false))\r\n      }\r\n    })\r\n    dispatch(setLoad(true))\r\n  }\r\n}\r\n","import API from '../../services/api'\r\n\r\nconst setHourlyWeather = (data) => {\r\n  return {\r\n    type: 'SET_HOURLY_WEATHER',\r\n    payload: {\r\n      hours: data,\r\n    },\r\n  }\r\n}\r\n\r\nconst setLoad = (isLoad) => {\r\n  return {\r\n    type: 'SET_LOAD',\r\n    payload: {\r\n      isLoad,\r\n    },\r\n  }\r\n}\r\n\r\nexport const getHourlyWeather = (lat, lon, city) => {\r\n  return (dispatch) => {\r\n    dispatch(setLoad(false))\r\n    API.getHourlyWeather(lat, lon, city).then((data) => {\r\n      dispatch(setHourlyWeather(data))\r\n    })\r\n    dispatch(setLoad(true))\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledSearch = styled.input`\r\n  min-width: 250px;\r\n  max-width: 400px;\r\n  height: 25px;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  outline: none;\r\n  color: #fff;\r\n  font-weigth: 500;\r\n  padding: 5px;\r\n  padding-left: 30px;\r\n  background: url(${(props) => props.icon}) center left no-repeat;\r\n  background-size: 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n`\r\nexport const StyledSearchWrapper = styled.div`\r\n  text-align: center;\r\n`\r\nexport const StyledErrorMessage = styled.p`\r\n  font-size: 10px;\r\n  color: #ec6e4c;\r\n  margin-top: 4px;\r\n  margin-bottom: -15px;\r\n`\r\n","export default __webpack_public_path__ + \"static/media/search.f2269564.svg\";","import { StyledErrorMessage, StyledSearch, StyledSearchWrapper } from './Styles'\r\nimport search from '../../assets/icons/search.svg'\r\nimport { useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setSearchCity } from '../../redux/actions/search'\r\n\r\nconst Search = () => {\r\n  const searchRef = useRef()\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault()\r\n    setSearchValue('')\r\n    dispatch(setSearchCity(searchValue.trim()))\r\n  }\r\n  const onChangeHandler = () => {\r\n    setSearchValue(searchRef.current.value)\r\n  }\r\n  const isResponseSuccessful = useSelector(\r\n    (state) => state.search.isResponseSuccessful\r\n  )\r\n\r\n  return (\r\n    <StyledSearchWrapper>\r\n      <form\r\n        onSubmit={(event) => {\r\n          onSubmitHandler(event)\r\n        }}>\r\n        <StyledSearch\r\n          ref={searchRef}\r\n          icon={search}\r\n          type={'text'}\r\n          onChange={onChangeHandler}\r\n          value={searchValue}\r\n        />\r\n      </form>\r\n      {isResponseSuccessful ? (\r\n        ''\r\n      ) : (\r\n        <StyledErrorMessage>\r\n          Ошибка. Неправильное название города\r\n        </StyledErrorMessage>\r\n      )}\r\n    </StyledSearchWrapper>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","export default __webpack_public_path__ + \"static/media/background.83f54bb5.jpg\";","import styled from 'styled-components'\r\nimport background from './assets/images/background.jpg'\r\n\r\nexport const Wrapper = styled.div`\r\n  min-height: 100vh;\r\n  overflow: hidden;\r\n  background: url(${background}) top/cover no-repeat;\r\n  padding: 0px 15px;\r\n`\r\n\r\nexport const Container = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n`\r\n","import { memo, useEffect } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport CurrentWeather from './components/CurrentWeather/CurrentWeather'\r\nimport DailyForecast from './components/DailyForecast/DailyForecast'\r\nimport Details from './components/Details/Details'\r\nimport HourlyForecast from './components/HourlyForecast/HourlyForecast'\r\nimport { getPosition } from './redux/actions/position'\r\nimport { getCurrentWeather } from './redux/actions/currentWeather'\r\nimport { getDailyWeather } from './redux/actions/dailyWeather'\r\nimport { getHourlyWeather } from './redux/actions/hourlyWeather'\r\nimport Search from './components/Search/Search'\r\nimport { Wrapper, Container } from './appStyle'\r\n\r\nconst App = memo(() => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { lat, lon } = useSelector((state) => state.position, shallowEqual)\r\n\r\n  const searchValue = useSelector((state) => state.search.searchCity)\r\n\r\n  const getWeatherByPosition = () => {\r\n    dispatch(getCurrentWeather(lat, lon))\r\n    dispatch(getDailyWeather(lat, lon))\r\n    dispatch(getHourlyWeather(lat, lon))\r\n  }\r\n\r\n  const getWeatherBySearch = (searchValue) => {\r\n    dispatch(getCurrentWeather(null, null, searchValue))\r\n    dispatch(getHourlyWeather(null, null, searchValue))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosition())\r\n    if (lat && lon && searchValue === null) {\r\n      getWeatherByPosition()\r\n    }\r\n    if (searchValue !== null) {\r\n      getWeatherBySearch(searchValue)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <CurrentWeather />\r\n        <Search />\r\n        <DailyForecast />\r\n        <HourlyForecast />\r\n        <Details />\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nexport default App\r\n","import { createGlobalStyle } from 'styled-components'\r\nimport normalize from 'styled-normalize'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n  body {\r\n    font-family: 'Montserrat', sans-serif;\r\n    color: #ffffff;\r\n    font-size: 14px;\r\n  }\r\n  p {\r\n    margin: 0;\r\n  }\r\n`\r\nexport default GlobalStyle","const initialState = {\r\n  country: null,\r\n  city: null,\r\n  temperature: null,\r\n  icon: null,\r\n  description: null,\r\n  feelsLike: null,\r\n  wind: null,\r\n  visibility: null,\r\n  isLoad: false,\r\n}\r\n\r\nconst CurrentWeather = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'SET_CURRENT_WEATHER':\r\n      return {\r\n        ...state,\r\n        country: payload.sys.country,\r\n        city: payload.name,\r\n        temperature: payload.main.temp,\r\n        icon: payload.weather[0].icon,\r\n        description: payload.weather[0].description,\r\n        feelsLike: payload.main.feels_like,\r\n        wind: payload.wind.speed,\r\n        visibility: payload.visibility,\r\n      }\r\n    case 'SET_LOAD':\r\n      return {\r\n        ...state,\r\n        isLoad: payload.isLoad,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default CurrentWeather\r\n","const initialState = {\r\n  lat: null,\r\n  lon: null,\r\n}\r\n\r\nconst Position = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'SET_POSITION':\r\n      return {\r\n        ...state,\r\n        lat: payload.lat,\r\n        lon: payload.lon,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default Position\r\n","const initialState = {\r\n  days: [],\r\n  activeDay: {\r\n    date: new Date().toDateString(),\r\n    isLoad: false,\r\n  },\r\n  coords: {\r\n    lat: null,\r\n    lon: null,\r\n  },\r\n}\r\n\r\nconst DailyWeather = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'SET_DAILY_WEATHER':\r\n      return {\r\n        ...state,\r\n        days: [...payload.daily],\r\n      }\r\n    case 'SET_ACTIVE_DAY':\r\n      return {\r\n        ...state,\r\n        activeDay: {\r\n          date: payload.date,\r\n        },\r\n      }\r\n    case 'SET_COORDS_BY_SEARCH': {\r\n      return {\r\n        ...state,\r\n        coords: {\r\n          lat: payload.lat,\r\n          lon: payload.lon,\r\n        },\r\n      }\r\n    }\r\n    case 'SET_LOAD':\r\n      return {\r\n        ...state,\r\n        isLoad: payload.isLoad,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default DailyWeather\r\n","const initialState = {\r\n  hours: [],\r\n  isLoad: false,\r\n}\r\n\r\nconst HourlyWeather = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'SET_HOURLY_WEATHER':\r\n      return {\r\n        ...state,\r\n        hours: payload.hours.list,\r\n      }\r\n    case 'SET_LOAD':\r\n      return {\r\n        ...state,\r\n        isLoad: payload.isLoad,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default HourlyWeather\r\n","const initialState = {\r\n  searchCity: null,\r\n  isResponseSuccessful: true,\r\n}\r\n\r\nconst search = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'SET_SEARCH_CITY':\r\n      return {\r\n        ...state,\r\n        searchCity: payload.searchCity,\r\n      }\r\n    case 'SET_RESPONSE':\r\n      return {\r\n        ...state,\r\n        isResponseSuccessful: payload.isResponseSuccessful,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default search\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport currentWeather from './reducers/currentWeather'\r\nimport position from './reducers/position'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport dailyWeather from './reducers/dailyWeather'\r\nimport hourlyWeather from './reducers/hourlyWeather'\r\nimport search from './reducers/search'\r\n\r\nconst reducers = combineReducers({\r\n  currentWeather,\r\n  position,\r\n  dailyWeather,\r\n  hourlyWeather,\r\n  search,\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(ReduxThunk))\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport GlobalStyle from './globalStyle'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <GlobalStyle />\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}
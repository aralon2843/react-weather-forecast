{"version":3,"sources":["common/Flex.jsx","components/CurrentWeather/CurrentWeatherLoader.jsx","components/CurrentWeather/Styles.js","components/CurrentWeather/CurrentWeather.jsx","services/api.js","redux/actions/dailyWeather.js","components/DailyForecast/DayForecast/Styles.js","components/DailyForecast/DayForecast/DayForecast.jsx","components/DailyForecast/DayForecast/DayForecastLoader.jsx","components/DailyForecast/Styles.js","components/DailyForecast/DailyForecast.jsx","common/convertTime.js","components/Details/DetailsLoader.jsx","components/Details/Styles.js","components/Details/Details.jsx","components/HourlyForecast/Styles.js","components/HourlyForecast/Chart/Chart.jsx","components/HourlyForecast/HourForecast/Styles.js","assets/icons/humidity.svg","assets/icons/wind.svg","components/HourlyForecast/HourForecast/HourForecast.jsx","common/Loader/Loader.jsx","components/HourlyForecast/HourlyForecast.jsx","redux/actions/position.js","redux/actions/currentWeather.js","redux/actionCreators/currentWeather.js","redux/actions/hourlyWeather.js","components/Search/Styles.js","assets/icons/search.svg","components/Search/Search.jsx","redux/actions/search.js","assets/images/background.jpg","appStyle.js","App.js","globalStyle.js","redux/sagas/currentWeatherSaga.js","redux/sagas/index.js","redux/reducers/currentWeather.js","redux/reducers/position.js","redux/reducers/dailyWeather.js","redux/reducers/hourlyWeather.js","redux/reducers/search.js","redux/store.js","index.js"],"names":["StyledFlex","styled","div","props","direction","align","justify","Flex","CurrentWeatherLoader","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","StyledCurrentWeather","StyledLocation","p","StyledTemperature","StyledWeatherIcon","img","StyledDescription","CurrentWeatherDetails","CurrentWeather","useSelector","currentWeather","country","city","description","feelsLike","icon","temperature","visibility","wind","isLoaded","src","alt","Math","round","axiosInstance","axios","create","baseURL","API","getCurrentWeather","lat","lon","get","then","response","data","catch","getDailyWeather","getHourlyWeather","setLoad","type","payload","dispatch","setDailyWeather","StyledDayForecast","StyledDate","StyledImage","DayForecast","active","date","maxTemp","minTemp","onDayClick","onClickHandler","useCallback","className","onClick","DayForecastLoader","style","flex","StyledDailyForecast","StyledTitle","h2","StyledWrapper","DailyForecast","memo","useDispatch","onDayClickHandler","day","_event","setActiveDay","Date","dt","toDateString","days","dailyWeather","activeDay","latBySearch","coords","lonBySearch","useEffect","slice","map","isActive","split","weather","ceil","temp","max","floor","min","Array","fill","convertTime","ts","toTimeString","substring","DetailsLoader","StyledDetails","StyledSun","StyledMoon","StyledWeatherPeriod","backgroundUrl","StyledSunrise","StyledSunset","StyledMoonrise","StyledMoonset","Details","filter","sunset","sunrise","moonset","moonrise","StyledHourlyForecast","StyledButton","button","StyledForecastLine","StyledSubtitle","GraphWrapper","Chart","defaults","color","font","family","weight","labels","hour","time","scaleFontColor","datasets","label","borderColor","options","defaultFontColor","maintainAspectRatio","StyledHourForecast","StyledPrecipitation","humidity","StyledWind","StyledTime","HourForecast","precipitation","windSvg","Loader","HourlyForecast","state","hourlyWeather","currentDayHourlyForecast","hours","useState","activeButton","setActiveButton","length","main","setPosition","location","actions","getCurrentWeatherRequest","getCurrentWeatherSuccess","setHourlyWeather","StyledSearch","input","StyledSearchWrapper","StyledErrorMessage","Search","searchRef","useRef","searchValue","setSearchValue","error","onSubmit","event","preventDefault","searchCity","trim","onSubmitHandler","ref","search","onChange","current","value","Wrapper","background","Container","App","position","shallowEqual","navigator","geolocation","getCurrentPosition","latitude","longitude","getWeatherBySearch","GlobalStyle","createGlobalStyle","normalize","watchGetCurrentWeather","doGetCurrentWeather","takeLatest","fetchCurrentWeather","action","call","put","message","rootSaga","all","initialState","sys","name","feels_like","Position","DailyWeather","daily","HourlyWeather","list","reducers","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","ReduxThunk","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d4ecfe8.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledFlex = styled.div`\r\n  display: flex;\r\n  flex-direction: ${(props) => props.direction || 'row'};\r\n  align-items: ${(props) => props.align || 'stretch'};\r\n  justify-content: ${(props) => props.justify || 'stretch'};\r\n  margin: 0px;\r\n`\r\n\r\nfunction Flex(props) {\r\n  return <StyledFlex {...props} />\r\n}\r\n\r\nexport default Flex\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst CurrentWeatherLoader = (props) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    width={270}\r\n    height={160}\r\n    viewBox='0 0 270 160'\r\n    backgroundColor='rgba(255, 255, 255, 0.2)'\r\n    foregroundColor='rgba(255, 255, 255, 0.4)'\r\n    {...props}>\r\n    <rect x='35' y='2' rx='10' ry='10' width='110' height='20' />\r\n    <rect x='155' y='2' rx='10' ry='10' width='60' height='20' />\r\n    <rect x='10' y='40' rx='10' ry='10' width='250' height='70' />\r\n    <rect x='85' y='120' rx='10' ry='10' width='100' height='18' />\r\n    <rect x='10' y='145' rx='10' ry='10' width='250' height='15' />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default CurrentWeatherLoader\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledCurrentWeather = styled.div`\r\n  text-align: center;\r\n  max-width: 270px;\r\n  margin: 0px auto;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n`\r\nexport const StyledLocation = styled.p`\r\n  font-size: 20px;\r\n`\r\n\r\nexport const StyledTemperature = styled.p`\r\n  font-size: 72px;\r\n  font-weight: 200;\r\n`\r\n\r\nexport const StyledWeatherIcon = styled.img`\r\n  object-fit: cover;\r\n  object-position: center;\r\n  width: 120px;\r\n  margin: -10px;\r\n`\r\n\r\nexport const StyledDescription = styled.p`\r\n  font-size: 20px;\r\n  margin-bottom: 15px;\r\n`\r\n\r\nexport const CurrentWeatherDetails = styled.div`\r\n  font-size: 12px;\r\n  & span {\r\n    margin-right: 7px;\r\n  }\r\n  & span:last-child {\r\n    margin-right: 0px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { memo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Flex from '../../common/Flex'\r\nimport CurrentWeatherLoader from './CurrentWeatherLoader'\r\nimport {\r\n  CurrentWeatherDetails,\r\n  StyledCurrentWeather,\r\n  StyledDescription,\r\n  StyledLocation,\r\n  StyledTemperature,\r\n  StyledWeatherIcon,\r\n} from './Styles'\r\n\r\nconst CurrentWeather = () => {\r\n  const {\r\n    country,\r\n    city,\r\n    description,\r\n    feelsLike,\r\n    icon,\r\n    temperature,\r\n    visibility,\r\n    wind,\r\n    isLoaded,\r\n  } = useSelector(({ currentWeather }) => currentWeather)\r\n\r\n  return (\r\n    <StyledCurrentWeather>\r\n      {isLoaded ? (\r\n        <>\r\n          <StyledLocation>\r\n            {city}, {country}\r\n          </StyledLocation>\r\n          <Flex align='center' justify='space-around'>\r\n            <StyledWeatherIcon\r\n              src={`http://openweathermap.org/img/wn/${icon}@4x.png`}\r\n              alt='weather icon'\r\n            />\r\n            <StyledTemperature>{Math.round(temperature)}°</StyledTemperature>\r\n          </Flex>\r\n          <StyledDescription>{description}</StyledDescription>\r\n          <CurrentWeatherDetails>\r\n            <span>Feels like {Math.round(feelsLike)}°</span>\r\n            <span>Wind {Math.round(wind)} km\\h</span>\r\n            <span>Visibility {visibility / 1000} km</span>\r\n          </CurrentWeatherDetails>\r\n        </>\r\n      ) : (\r\n        <CurrentWeatherLoader />\r\n      )}\r\n    </StyledCurrentWeather>\r\n  )\r\n}\r\n\r\nexport default CurrentWeather\r\n","import axios from 'axios'\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5/',\r\n})\r\n\r\nconst API = {\r\n  getCurrentWeather: (lat, lon, city = null) => {\r\n    return axiosInstance\r\n      .get(\r\n        `weather?${\r\n          lat !== null && lon !== null ? 'lat=' + lat + `&lon=` + lon : ''\r\n        }${\r\n          city !== null ? `&q=` + city : ''\r\n        }&units=metric&appid=34f0fb637a40be39e56e907408b59746`\r\n      )\r\n      .then((response) => response.data)\r\n      .catch(() => 404)\r\n  },\r\n  getDailyWeather: (lat, lon) => {\r\n    return axiosInstance\r\n      .get(\r\n        `onecall?lat=${lat}&lon=${lon}&exclude=minutely,alerts,current&units=metric&appid=34f0fb637a40be39e56e907408b59746`\r\n      )\r\n      .then((response) => response.data)\r\n  },\r\n  getHourlyWeather: (lat, lon, city = null) => {\r\n    return axiosInstance\r\n      .get(\r\n        `forecast?${\r\n          lat !== null && lon !== null ? 'lat=' + lat + `&lon=` + lon : ''\r\n        }${\r\n          city !== null && city ? `q=` + city : ''\r\n        }&units=metric&appid=34f0fb637a40be39e56e907408b59746`\r\n      )\r\n      .then((response) => response.data)\r\n  },\r\n}\r\nexport default API\r\n","import API from '../../services/api';\r\n\r\nconst setDailyWeather = (data) => ({\r\n  type: 'SET_DAILY_WEATHER',\r\n  payload: { ...data }\r\n});\r\n\r\nconst setLoad = (isLoaded) => ({\r\n  type: 'SET_LOAD',\r\n  payload: { isLoaded }\r\n});\r\n\r\nexport const setActiveDay = (day) => ({\r\n  type: 'SET_ACTIVE_DAY',\r\n  payload: { date: day }\r\n});\r\n\r\nexport const setCoordsBySearch = (coords) => ({\r\n  type: 'SET_COORDS_BY_SEARCH',\r\n  payload: {\r\n    lat: coords.lat,\r\n    lon: coords.lon\r\n  }\r\n});\r\n\r\nexport const getDailyWeather = (lat, lon, city) => {\r\n  return (dispatch) => {\r\n    dispatch(setLoad(false));\r\n\r\n    API.getDailyWeather(lat, lon, city).then((data) => {\r\n      dispatch(setDailyWeather(data));\r\n    });\r\n\r\n    dispatch(setLoad(true));\r\n  };\r\n};\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledDayForecast = styled.div`\r\n  padding: 5px 15px 10px 5px;\r\n  min-width: 95px;\r\n  max-width: 125px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    outline: 2px solid rgba(255, 255, 255, 0.8);\r\n  }\r\n  &.active {\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n    position: relative;\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: -23px;\r\n      left: calc(50% - 13px);\r\n      border: 13px solid transparent;\r\n      border-top: 10px solid rgba(255, 255, 255, 0.3);\r\n    }\r\n  }\r\n  margin: 0px 5px;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n`\r\nexport const StyledDate = styled.p`\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nexport const StyledImage = styled.img`\r\n  object-fit: cover;\r\n  object-position: center;\r\n  width: 70px;\r\n  height: 70px;\r\n  margin: -10px 0px -10px -15px;\r\n`\r\n\r\nexport const StyledTemperature = styled.p`\r\n  font-size: 24px;\r\n  margin-top: 10px;\r\n  & span {\r\n    font-size: 14px;\r\n    color: rgba(255, 255, 255, 0.5);\r\n  }\r\n  margin-bottom: 10px;\r\n`\r\nexport const StyledDescription = styled.p`\r\n  min-width: 100px;\r\n`\r\n","import React from 'react';\r\nimport { useCallback } from 'react';\r\nimport {\r\n  StyledDate,\r\n  StyledDayForecast,\r\n  StyledDescription,\r\n  StyledImage,\r\n  StyledTemperature\r\n} from './Styles';\r\n\r\nfunction DayForecast({\r\n  active,\r\n  date,\r\n  icon,\r\n  maxTemp,\r\n  minTemp,\r\n  description,\r\n  onDayClick\r\n}) {\r\n  const onClickHandler = useCallback(() => onDayClick(), []);\r\n\r\n  return (\r\n    <StyledDayForecast\r\n      className={active ? 'active' : ''}\r\n      onClick={onClickHandler}\r\n    >\r\n      <StyledDate>\r\n        {date[0]} {date[2]}\r\n      </StyledDate>\r\n      <StyledImage src={icon}></StyledImage>\r\n      <StyledTemperature>\r\n        {maxTemp}° <span> {minTemp}°</span>\r\n      </StyledTemperature>\r\n      <StyledDescription>{description}</StyledDescription>\r\n    </StyledDayForecast>\r\n  );\r\n}\r\n\r\nexport default DayForecast;\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst DayForecastLoader = (props) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    width={145}\r\n    height={175}\r\n    viewBox='0 0 145 175'\r\n    backgroundColor='rgba(255, 255, 255, 0.2)'\r\n    foregroundColor='rgba(255, 255, 255, 0.4)'\r\n    style={{ flex: '0 0 135px' }}\r\n    {...props}>\r\n    <rect x='0' y='0' rx='10' ry='10' width='100' height='20' />\r\n    <rect x='0' y='30' rx='10' ry='10' width='120' height='110' />\r\n    <rect x='0' y='150' rx='10' ry='10' width='120' height='20' />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default DayForecastLoader\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDailyForecast = styled.div`\r\n  max-width: 1000px;\r\n  overflow-y: hidden;\r\n  scrollbar-width: none;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  margin: 0px auto;\r\n`;\r\nexport const StyledTitle = styled.h2`\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const StyledWrapper = styled.div`\r\n  overflow-y: hidden;\r\n  scrollbar-width: none;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  padding: 2px 2px 10px 2px;\r\n`;\r\n","import React, { memo, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Flex from '../../common/Flex';\r\nimport {\r\n  getDailyWeather,\r\n  setActiveDay\r\n} from '../../redux/actions/dailyWeather';\r\nimport DayForecast from './DayForecast/DayForecast';\r\nimport DayForecastLoader from './DayForecast/DayForecastLoader';\r\nimport { StyledDailyForecast, StyledTitle, StyledWrapper } from './Styles';\r\n\r\nconst DailyForecast = memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDayClickHandler = (day) => (_event) =>\r\n    dispatch(setActiveDay(new Date(day.dt * 1000).toDateString()));\r\n\r\n  const days = useSelector(({ dailyWeather }) => dailyWeather.days);\r\n  const activeDay = useSelector(\r\n    ({ dailyWeather }) => dailyWeather.activeDay.date\r\n  );\r\n\r\n  const isLoaded = useSelector(({ dailyWeather }) => dailyWeather.isLoaded);\r\n\r\n  const latBySearch = useSelector(({ dailyWeather: { coords } }) => coords.lat);\r\n  const lonBySearch = useSelector(({ dailyWeather: { coords } }) => coords.lon);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      latBySearch &&\r\n      latBySearch !== null &&\r\n      lonBySearch &&\r\n      lonBySearch !== null\r\n    ) {\r\n      dispatch(getDailyWeather(latBySearch, lonBySearch));\r\n    }\r\n  }, [dispatch, latBySearch, lonBySearch]);\r\n\r\n  return (\r\n    <StyledDailyForecast>\r\n      <StyledTitle>Daily</StyledTitle>\r\n      <StyledWrapper>\r\n        <Flex justify=\"space-between\">\r\n          {isLoaded\r\n            ? days?.slice(0, 5).map((day) => {\r\n                const isActive =\r\n                  activeDay === new Date(day.dt * 1000).toDateString();\r\n\r\n                return (\r\n                  <DayForecast\r\n                    onDayClick={onDayClickHandler(day)}\r\n                    active={isActive}\r\n                    date={new Date(day.dt * 1000).toDateString().split(' ')}\r\n                    icon={`http://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`}\r\n                    maxTemp={Math.ceil(day.temp.max)}\r\n                    minTemp={Math.floor(day.temp.min)}\r\n                    description={day.weather[0].description}\r\n                    key={day.dt}\r\n                  />\r\n                );\r\n              })\r\n            : Array(5).fill(<DayForecastLoader />)}\r\n        </Flex>\r\n      </StyledWrapper>\r\n    </StyledDailyForecast>\r\n  );\r\n});\r\n\r\nexport default DailyForecast;\r\n","const convertTime = (ts) => new Date(ts * 1000).toTimeString().substring(0, 5)\r\n\r\nexport default convertTime\r\n","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst DetailsLoader = (props) => (\r\n  <ContentLoader\r\n    speed={2}\r\n    width={140}\r\n    height={180}\r\n    viewBox='0 0 140 180'\r\n    backgroundColor='rgba(255, 255, 255, 0.2)'\r\n    foregroundColor='rgba(255, 255, 255, 0.4)'\r\n    {...props}>\r\n    <rect x='0' y='0' rx='10' ry='10' width='130' height='85' />\r\n    <rect x='0' y='93' rx='10' ry='10' width='130' height='85' />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default DetailsLoader\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDetails = styled.div`\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const StyledDescription = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nexport const StyledSun = styled.div`\r\n  display: flex;\r\n  padding-top: 5px;\r\n  flex-wrap: wrap;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n  margin-right: 25px;\r\n  font-size: 24px;\r\n  line-height: 30px;\r\n  min-width: 130px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 17px;\r\n    display: block;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const StyledMoon = styled.div`\r\n  display: flex;\r\n  padding-top: 5px;\r\n  flex-wrap: wrap;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n  font-size: 24px;\r\n  line-height: 30px;\r\n  min-width: 130px;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 17px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const StyledWeatherPeriod = styled.div`\r\n  padding-left: 43px;\r\n  background: ${({ backgroundUrl }) =>\r\n    backgroundUrl && `url(${backgroundUrl}) left/cover no-repeat`};\r\n  background-size: 32px;\r\n`;\r\n\r\nexport const StyledSunrise = styled(StyledWeatherPeriod)`\r\n  margin: 5px 20px 15px 0px;\r\n`;\r\nexport const StyledSunset = styled(StyledWeatherPeriod)`\r\n  margin: 5px 0px 15px 0px;\r\n`;\r\nexport const StyledMoonrise = styled(StyledWeatherPeriod)`\r\n  margin: 5px 20px 15px 0px;\r\n`;\r\nexport const StyledMoonset = styled(StyledWeatherPeriod)`\r\n  margin: 5px 0px 15px 0px;\r\n`;\r\n\r\nexport const StyledTitle = styled.h2`\r\n  font-size: 18px;\r\n  margin-bottom: 25px;\r\n`;\r\n","import { memo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport convertTime from '../../common/convertTime';\r\nimport Flex from '../../common/Flex';\r\nimport DetailsLoader from './DetailsLoader';\r\nimport {\r\n  StyledDetails,\r\n  StyledMoon,\r\n  StyledMoonrise,\r\n  StyledSun,\r\n  StyledSunrise,\r\n  StyledTitle,\r\n  StyledSunset,\r\n  StyledMoonset,\r\n  StyledDescription\r\n} from './Styles';\r\n\r\nconst Details = memo((props) => {\r\n  const activeDay = useSelector(\r\n    ({ dailyWeather }) => dailyWeather.activeDay.date\r\n  );\r\n\r\n  const days = useSelector(({ dailyWeather }) => dailyWeather.days);\r\n  const day = days.filter(\r\n    (day) => new Date(day.dt * 1000).toDateString() === activeDay\r\n  );\r\n  const isLoaded = useSelector(({ currentWeather }) => currentWeather.isLoaded);\r\n\r\n  const sunset = convertTime(day[0]?.sunset);\r\n  const sunrise = convertTime(day[0]?.sunrise);\r\n  const moonset = convertTime(day[0]?.moonset);\r\n  const moonrise = convertTime(day[0]?.moonrise);\r\n\r\n  return (\r\n    <StyledDetails>\r\n      <StyledTitle>Day Details</StyledTitle>\r\n      <Flex>\r\n        {isLoaded ? (\r\n          <StyledSun>\r\n            <div>\r\n              <StyledDescription>Sunrise</StyledDescription>\r\n              <StyledSunrise\r\n                backgroundUrl={\r\n                  'https://image.flaticon.com/icons/png/512/728/728123.png'\r\n                }\r\n              >\r\n                {sunrise} AM\r\n              </StyledSunrise>\r\n            </div>\r\n            <div>\r\n              <StyledDescription>Sunset</StyledDescription>\r\n              <StyledSunset\r\n                backgroundUrl={\r\n                  'https://image.flaticon.com/icons/png/512/728/728124.png'\r\n                }\r\n              >\r\n                {sunset} PM\r\n              </StyledSunset>\r\n            </div>\r\n          </StyledSun>\r\n        ) : (\r\n          <DetailsLoader />\r\n        )}\r\n\r\n        {isLoaded ? (\r\n          <StyledMoon>\r\n            <div>\r\n              <StyledDescription>Moonrise</StyledDescription>\r\n              <StyledMoonrise\r\n                backgroundUrl={\r\n                  'https://image.flaticon.com/icons/png/512/728/728098.png'\r\n                }\r\n              >\r\n                {moonrise} PM\r\n              </StyledMoonrise>\r\n            </div>\r\n            <div>\r\n              <StyledDescription>Moonset</StyledDescription>\r\n              <StyledMoonset\r\n                backgroundUrl={\r\n                  'https://image.flaticon.com/icons/png/512/728/728099.png'\r\n                }\r\n              >\r\n                {moonset} AM\r\n              </StyledMoonset>\r\n            </div>\r\n          </StyledMoon>\r\n        ) : (\r\n          <DetailsLoader />\r\n        )}\r\n      </Flex>\r\n    </StyledDetails>\r\n  );\r\n});\r\n\r\nexport default Details;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledHourlyForecast = styled.div`\r\n  margin-bottom: 25px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const StyledTitle = styled.h2`\r\n  font-size: 18px;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  border: none;\r\n  background-color: ${({ active }) =>\r\n    active ? 'ccc' : 'rgba(255, 255, 255, 0.5)'};\r\n  padding: 5px;\r\n  height: 30px;\r\n  width: 100%;\r\n  font-size: 13px;\r\n  &:hover {\r\n    outline: 1px solid #fff;\r\n  }\r\n  cursor: pointer;\r\n  margin-right: 15px;\r\n  font-weight: 500;\r\n  color: #262626;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n`;\r\nexport const StyledWrapper = styled.div`\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.5);\r\n  border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n  overflow-y: hidden;\r\n  scrollbar-width: none;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const StyledForecastLine = styled.div`\r\n  display: flex;\r\n  justify-content: ${({ isLoaded, justify }) =>\r\n    isLoaded ? justify : 'center'};\r\n`;\r\n\r\nexport const StyledSubtitle = styled.p`\r\n  font-size: 18px;\r\n  margin: 20px 0px;\r\n`;\r\n\r\nexport const GraphWrapper = styled.div`\r\n  min-height: 212px;\r\n`;\r\n","import { defaults } from 'react-chartjs-2'\r\nimport { memo } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { GraphWrapper } from '../Styles'\r\n\r\nconst Chart = memo((props) => {\r\n  defaults.color = '#fff'\r\n  defaults.font.family = \"'Montserrat', 'sans-serif'\"\r\n  defaults.font.weight = 500\r\n\r\n  const data = {\r\n    labels: props.data.map((hour) =>\r\n      hour.time === '00'\r\n        ? '12 am'\r\n        : hour.time < 12\r\n        ? hour.time + ' am'\r\n        : hour.time + ' pm'\r\n    ),\r\n    scaleFontColor: '#ffffff',\r\n    datasets: [\r\n      {\r\n        label: 'temperature',\r\n        data: props.data.map((hour) => hour.temperature),\r\n        fill: false,\r\n        backgroundColor: '#EC6E4C',\r\n        borderColor: 'rgba(255, 255, 255, 0.5)',\r\n      },\r\n    ],\r\n  }\r\n\r\n  const options = {\r\n    defaultFontColor: '#FFFFFF',\r\n    maintainAspectRatio: false,\r\n  }\r\n\r\n  return (\r\n    <GraphWrapper>\r\n      <Line data={data} options={options} width={1200} height={212} />\r\n    </GraphWrapper>\r\n  )\r\n})\r\n\r\nexport default Chart\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledHourForecast = styled.div`\r\n  padding: 10px 10px 10px 5px;\r\n  min-width: 80px;\r\n  flex: 0 1 135px;\r\n  opacity: 0.2;\r\n  position: relative;\r\n  animation: 1s slidein forwards;\r\n\r\n  @-webkit-keyframes slidein {\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @keyframes slidein {\r\n    100% {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledImage = styled.img`\r\n  object-fit: cover;\r\n  object-position: center;\r\n  width: 70px;\r\n  height: 70px;\r\n  margin: -15px 0px -12px -14px;\r\n`;\r\n\r\nexport const StyledTemperature = styled.p`\r\n  font-size: 20px;\r\n  margin-bottom: 7px;\r\n`;\r\n\r\nexport const StyledDescription = styled.p`\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n  min-height: 33px;\r\n  height: 45px;\r\n  max-width: 60px;\r\n`;\r\n\r\nexport const StyledPrecipitation = styled.p`\r\n  color: rgba(255, 255, 255, 0.7);\r\n  margin-bottom: 5px;\r\n  background: url(${(props) => props.humidity}) left/cover no-repeat;\r\n  background-size: 15px;\r\n  padding-left: 20px;\r\n`;\r\n\r\nexport const StyledWind = styled.p`\r\n  color: rgba(255, 255, 255, 0.7);\r\n  margin-bottom: 8px;\r\n  background: url(${(props) => props.wind}) left/cover no-repeat;\r\n  background-size: 15px;\r\n  padding-left: 20px;\r\n`;\r\n\r\nexport const StyledTime = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/humidity.a0b117ee.svg\";","export default __webpack_public_path__ + \"static/media/wind.117d25e4.svg\";","import React from 'react';\r\nimport {\r\n  StyledHourForecast,\r\n  StyledPrecipitation,\r\n  StyledTime,\r\n  StyledWind,\r\n  StyledDescription,\r\n  StyledTemperature,\r\n  StyledImage\r\n} from './Styles';\r\nimport humidity from '../../../assets/icons/humidity.svg';\r\nimport windSvg from '../../../assets/icons/wind.svg';\r\n\r\nconst HourForecast = ({\r\n  icon,\r\n  temperature,\r\n  description,\r\n  precipitation,\r\n  wind,\r\n  time\r\n}) => {\r\n  return (\r\n    <StyledHourForecast>\r\n      <StyledImage src={icon}></StyledImage>\r\n      <StyledTemperature>{temperature}°</StyledTemperature>\r\n      <StyledDescription>{description}</StyledDescription>\r\n      <StyledPrecipitation humidity={humidity}>\r\n        {`${precipitation}%`}\r\n      </StyledPrecipitation>\r\n      <StyledWind wind={windSvg}>{`${wind} km/h`}</StyledWind>\r\n      <StyledTime>\r\n        {time === '00' ? '12' : time}\r\n        {time < 12 ? ' am' : ' pm'}\r\n      </StyledTime>\r\n    </StyledHourForecast>\r\n  );\r\n};\r\n\r\nexport default HourForecast;\r\n","import './styles.css'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='wrapper'>\r\n      <div className='lds-roller'>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import Chart from './Chart/Chart';\r\nimport React, { memo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport convertTime from '../../common/convertTime';\r\nimport Flex from '../../common/Flex';\r\nimport HourForecast from './HourForecast/HourForecast';\r\nimport {\r\n  StyledButton,\r\n  StyledHourlyForecast,\r\n  StyledSubtitle,\r\n  StyledTitle,\r\n  StyledWrapper,\r\n  StyledForecastLine\r\n} from './Styles';\r\nimport Loader from '../../common/Loader/Loader';\r\n\r\nconst HourlyForecast = memo(() => {\r\n  const activeDay = useSelector((state) => state.dailyWeather.activeDay.date);\r\n\r\n  const isLoaded = useSelector((state) => state.hourlyWeather.isLoaded);\r\n\r\n  const hourlyForecast = useSelector((state) => state.hourlyWeather.hours);\r\n\r\n  const currentDayHourlyForecast = hourlyForecast.filter(\r\n    (hour) => new Date(hour.dt * 1000).toDateString() === activeDay\r\n  );\r\n\r\n  const [activeButton, setActiveButton] = useState('Details');\r\n\r\n  const onSummaryClick = () => setActiveButton('Summary');\r\n\r\n  const onDetailsClick = () => setActiveButton('Details');\r\n\r\n  return (\r\n    <StyledHourlyForecast>\r\n      <Flex justify=\"space-between\" align=\"center\">\r\n        <StyledTitle>Every 3 hours</StyledTitle>\r\n        <Flex>\r\n          <StyledButton\r\n            active={activeButton === 'Summary'}\r\n            onClick={onSummaryClick}\r\n          >\r\n            Summary\r\n          </StyledButton>\r\n          <StyledButton\r\n            active={activeButton === 'Details'}\r\n            onClick={onDetailsClick}\r\n          >\r\n            Details\r\n          </StyledButton>\r\n        </Flex>\r\n      </Flex>\r\n      <StyledWrapper>\r\n        {isLoaded ? (\r\n          currentDayHourlyForecast.length > 0 ? (\r\n            activeButton === 'Details' ? (\r\n              <StyledForecastLine\r\n                isLoaded={isLoaded}\r\n                justify={\r\n                  currentDayHourlyForecast.length < 6\r\n                    ? 'start'\r\n                    : 'space-between'\r\n                }\r\n              >\r\n                {currentDayHourlyForecast.map((hour) => (\r\n                  <HourForecast\r\n                    icon={`http://openweathermap.org/img/wn/${hour.weather[0].icon}@2x.png`}\r\n                    temperature={Math.round(hour.main.temp)}\r\n                    description={hour.weather[0].description}\r\n                    precipitation={hour.main.humidity}\r\n                    wind={Math.round(hour.wind.speed)}\r\n                    time={convertTime(hour.dt).substring(0, 2)}\r\n                    key={hour.dt}\r\n                  />\r\n                ))}\r\n              </StyledForecastLine>\r\n            ) : (\r\n              <Chart\r\n                data={currentDayHourlyForecast.map((hour) => ({\r\n                  time: convertTime(hour.dt).substring(0, 2),\r\n                  temperature: hour.main.temp\r\n                }))}\r\n              />\r\n            )\r\n          ) : (\r\n            <StyledSubtitle>\r\n              Sorry, no weather for the next 3 hours\r\n            </StyledSubtitle>\r\n          )\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </StyledWrapper>\r\n    </StyledHourlyForecast>\r\n  );\r\n});\r\n\r\nexport default HourlyForecast;\r\n","export const setPosition = (location) => {\r\n  return {\r\n    type: 'SET_POSITION',\r\n    payload: { ...location },\r\n  }\r\n}\r\n\r\nexport const getPosition = () => {\r\n  return (dispatch) => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) =>\r\n        dispatch(\r\n          setPosition({\r\n            lat: position.coords.latitude,\r\n            lon: position.coords.longitude,\r\n          })\r\n        ),\r\n      () => {\r\n        dispatch(\r\n          setPosition({\r\n            lat: 55.751244,\r\n            lon: 37.618423,\r\n          })\r\n        )\r\n      }\r\n    )\r\n  }\r\n}\r\n","export const actions = {\r\n  GET_CURRENT_WEATHER: 'GET_CURRENT_WEATHER',\r\n  GET_CURRENT_WEATHER_SUCCESS: 'GET_CURRENT_WEATHER_SUCCESS',\r\n  GET_CURRENT_WEATHER_ERROR: 'GET_CURRENT_WEATHER_ERROR'\r\n};\r\n","import { actions } from '../actions/currentWeather'\r\n\r\nexport const getCurrentWeatherRequest = (payload) => ({\r\n  type: actions.GET_CURRENT_WEATHER,\r\n  payload,\r\n})\r\n\r\nexport const getCurrentWeatherSuccess = (payload) => ({\r\n  type: actions.GET_CURRENT_WEATHER_SUCCESS,\r\n  payload,\r\n})\r\n\r\nexport const getCurrentWeatherError = () => ({\r\n  type: actions.GET_CURRENT_WEATHER_ERROR,\r\n})\r\n","import API from '../../services/api';\r\n\r\nconst setHourlyWeather = (data) => {\r\n  return {\r\n    type: 'SET_HOURLY_WEATHER',\r\n    payload: {\r\n      hours: data\r\n    }\r\n  };\r\n};\r\n\r\nconst setLoad = (isLoaded) => {\r\n  return {\r\n    type: 'SET_LOAD',\r\n    payload: {\r\n      isLoaded\r\n    }\r\n  };\r\n};\r\n\r\nexport const getHourlyWeather = (lat, lon, city) => {\r\n  return (dispatch) => {\r\n    dispatch(setLoad(false));\r\n    API.getHourlyWeather(lat, lon, city).then((data) => {\r\n      dispatch(setHourlyWeather(data));\r\n    });\r\n    dispatch(setLoad(true));\r\n  };\r\n};\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledSearch = styled.input`\r\n  min-width: 250px;\r\n  max-width: 400px;\r\n  height: 25px;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  border: none;\r\n  outline: none;\r\n  color: #fff;\r\n  font-weigth: 500;\r\n  padding: 5px;\r\n  padding-left: 30px;\r\n  background: url(${(props) => props.icon}) center left no-repeat;\r\n  background-size: 20px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\r\n`\r\nexport const StyledSearchWrapper = styled.div`\r\n  text-align: center;\r\n`\r\nexport const StyledErrorMessage = styled.p`\r\n  font-size: 10px;\r\n  color: #ec6e4c;\r\n  margin-top: 4px;\r\n  margin-bottom: -15px;\r\n`\r\n","export default __webpack_public_path__ + \"static/media/search.f2269564.svg\";","import { StyledErrorMessage, StyledSearch, StyledSearchWrapper } from './Styles'\r\nimport search from '../../assets/icons/search.svg'\r\nimport { useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setSearchCity } from '../../redux/actions/search'\r\n\r\nconst Search = () => {\r\n  const searchRef = useRef()\r\n  const [searchValue, setSearchValue] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault()\r\n    setSearchValue('')\r\n    dispatch(setSearchCity(searchValue.trim()))\r\n  }\r\n  const onChangeHandler = () => {\r\n    setSearchValue(searchRef.current.value)\r\n  }\r\n  const error = useSelector(\r\n    (state) => state.currentWeather.error\r\n  )\r\n\r\n  return (\r\n    <StyledSearchWrapper>\r\n      <form\r\n        onSubmit={(event) => {\r\n          onSubmitHandler(event)\r\n        }}>\r\n        <StyledSearch\r\n          ref={searchRef}\r\n          icon={search}\r\n          type={'text'}\r\n          onChange={onChangeHandler}\r\n          value={searchValue}\r\n        />\r\n      </form>\r\n      {!error ? (\r\n        ''\r\n      ) : (\r\n        <StyledErrorMessage>\r\n          Ошибка. Неправильное название города\r\n        </StyledErrorMessage>\r\n      )}\r\n    </StyledSearchWrapper>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","export const setSearchCity = (searchCity) => {\r\n  return {\r\n    type: 'SET_SEARCH_CITY',\r\n    payload: {\r\n      searchCity,\r\n    },\r\n  }\r\n}\r\n\r\nexport const setResponse = (isResponseSuccessful) => {\r\n  return {\r\n    type: 'SET_RESPONSE',\r\n    payload: {\r\n      isResponseSuccessful,\r\n    },\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.83f54bb5.jpg\";","import styled from 'styled-components'\r\nimport background from './assets/images/background.jpg'\r\n\r\nexport const Wrapper = styled.div`\r\n  min-height: 100vh;\r\n  overflow: hidden;\r\n  background: url(${background}) top/cover no-repeat;\r\n  padding: 0px 15px;\r\n`\r\n\r\nexport const Container = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 1200px;\r\n`\r\n","import { memo, useEffect } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport CurrentWeather from './components/CurrentWeather/CurrentWeather'\r\nimport DailyForecast from './components/DailyForecast/DailyForecast'\r\nimport Details from './components/Details/Details'\r\nimport HourlyForecast from './components/HourlyForecast/HourlyForecast'\r\nimport { getPosition } from './redux/actions/position'\r\nimport { getCurrentWeatherRequest } from './redux/actionCreators/currentWeather'\r\nimport { getDailyWeather } from './redux/actions/dailyWeather'\r\nimport { getHourlyWeather } from './redux/actions/hourlyWeather'\r\nimport Search from './components/Search/Search'\r\nimport { Wrapper, Container } from './appStyle'\r\n\r\nconst App = memo(() => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { lat, lon } = useSelector((state) => state.position, shallowEqual)\r\n\r\n  const searchValue = useSelector((state) => state.search.searchCity)\r\n\r\n  const getWeatherByPosition = () => {\r\n    // refactored on redux-sagas\r\n    dispatch(getCurrentWeatherRequest({ lat, lon }))\r\n\r\n    dispatch(getDailyWeather(lat, lon))\r\n    dispatch(getHourlyWeather(lat, lon))\r\n  }\r\n\r\n  const getWeatherBySearch = (searchValue) => {\r\n    dispatch(getCurrentWeatherRequest({ lat: null, lon: null, searchValue }))\r\n    dispatch(getHourlyWeather(null, null, searchValue))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getPosition())\r\n    if (lat && lon && searchValue === null) {\r\n      getWeatherByPosition()\r\n    }\r\n    if (searchValue !== null) {\r\n      getWeatherBySearch(searchValue)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <CurrentWeather />\r\n        <Search />\r\n        <DailyForecast />\r\n        <HourlyForecast />\r\n        <Details />\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nexport default App\r\n","import { createGlobalStyle } from 'styled-components'\r\nimport normalize from 'styled-normalize'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n  body {\r\n    font-family: 'Montserrat', sans-serif;\r\n    color: #ffffff;\r\n    font-size: 14px;\r\n  }\r\n  p {\r\n    margin: 0;\r\n  }\r\n`\r\nexport default GlobalStyle","import { takeLatest, put, call } from 'redux-saga/effects'\r\nimport { actions } from '../actions/currentWeather'\r\nimport {\r\n  getCurrentWeatherSuccess,\r\n  getCurrentWeatherError,\r\n} from '../actionCreators/currentWeather'\r\nimport API from '../../services/api'\r\n\r\nexport function* watchGetCurrentWeather() {\r\n  yield takeLatest(actions.GET_CURRENT_WEATHER, doGetCurrentWeather)\r\n}\r\n\r\nconst fetchCurrentWeather = ({ lat, lon, searchValue }) => {\r\n  return API.getCurrentWeather(lat, lon, searchValue)\r\n}\r\n\r\nfunction* doGetCurrentWeather(action) {\r\n  const { payload } = action\r\n\r\n  try {\r\n    const response = yield call(fetchCurrentWeather, payload)\r\n    yield put(getCurrentWeatherSuccess(response))\r\n  } catch ({ message }) {\r\n    yield put(getCurrentWeatherError())\r\n  }\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport { watchGetCurrentWeather } from './currentWeatherSaga';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([watchGetCurrentWeather()]); // [watchSome1(), watchSome2()]\r\n}\r\n","import { actions } from '../actions/currentWeather'\r\n\r\nconst initialState = {\r\n  country: null,\r\n  city: null,\r\n  temperature: null,\r\n  icon: null,\r\n  description: null,\r\n  feelsLike: null,\r\n  wind: null,\r\n  visibility: null,\r\n  isLoaded: false,\r\n  error: false,\r\n}\r\n\r\nconst CurrentWeather = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actions.GET_CURRENT_WEATHER: {\r\n      return {\r\n        ...state,\r\n        isLoaded: false,\r\n      }\r\n    }\r\n\r\n    case actions.GET_CURRENT_WEATHER_SUCCESS: {\r\n      // return state.set(...state).set('isCurrentWeatherLoaded', true); // попробуй реализовать через state.set или state.update\r\n\r\n      return {\r\n        ...state,\r\n        country: payload.sys.country,\r\n        city: payload.name,\r\n        temperature: payload.main.temp,\r\n        icon: payload.weather[0].icon,\r\n        description: payload.weather[0].description,\r\n        feelsLike: payload.main.feels_like,\r\n        wind: payload.wind.speed,\r\n        visibility: payload.visibility,\r\n        error: false,\r\n        isLoaded: true,\r\n      }\r\n    }\r\n\r\n    case actions.GET_CURRENT_WEATHER_ERROR: {\r\n      // return state.set('isCurrentWeatherLoaded', false);\r\n      // return { isCurrentWeatherLoaded: false };\r\n\r\n      return { ...state, isLoaded: true, error: true }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default CurrentWeather\r\n","const initialState = {\r\n  lat: null,\r\n  lon: null,\r\n}\r\n\r\nconst Position = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'SET_POSITION':\r\n      return {\r\n        ...state,\r\n        lat: payload.lat,\r\n        lon: payload.lon,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default Position\r\n","const initialState = {\r\n  days: [],\r\n  activeDay: {\r\n    date: new Date().toDateString()\r\n  },\r\n  coords: {\r\n    lat: null,\r\n    lon: null\r\n  },\r\n  isLoaded: false\r\n};\r\n\r\nconst DailyWeather = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'SET_DAILY_WEATHER':\r\n      return {\r\n        ...state,\r\n        days: [...payload.daily]\r\n      };\r\n    case 'SET_ACTIVE_DAY':\r\n      return {\r\n        ...state,\r\n        activeDay: {\r\n          date: payload.date\r\n        }\r\n      };\r\n    case 'SET_COORDS_BY_SEARCH': {\r\n      return {\r\n        ...state,\r\n        coords: {\r\n          lat: payload.lat,\r\n          lon: payload.lon\r\n        }\r\n      };\r\n    }\r\n    case 'SET_LOAD':\r\n      return {\r\n        ...state,\r\n        isLoaded: payload.isLoaded\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default DailyWeather;\r\n","const initialState = {\r\n  hours: [],\r\n  isLoaded: false\r\n};\r\n\r\nconst HourlyWeather = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'SET_HOURLY_WEATHER':\r\n      return {\r\n        ...state,\r\n        hours: payload.hours.list\r\n      };\r\n    case 'SET_LOAD':\r\n      return {\r\n        ...state,\r\n        isLoaded: payload.isLoaded\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default HourlyWeather;\r\n","const initialState = {\r\n  searchCity: null,\r\n}\r\n\r\nconst search = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'SET_SEARCH_CITY':\r\n      return {\r\n        ...state,\r\n        searchCity: payload.searchCity,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default search\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas/';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport currentWeather from './reducers/currentWeather';\r\nimport position from './reducers/position';\r\nimport ReduxThunk from 'redux-thunk';\r\nimport dailyWeather from './reducers/dailyWeather';\r\nimport hourlyWeather from './reducers/hourlyWeather';\r\nimport search from './reducers/search';\r\n\r\nconst reducers = combineReducers({\r\n  currentWeather,\r\n  position,\r\n  dailyWeather,\r\n  hourlyWeather,\r\n  search\r\n});\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middleware = [sagaMiddleware, ReduxThunk];\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport GlobalStyle from './globalStyle'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <GlobalStyle />\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}